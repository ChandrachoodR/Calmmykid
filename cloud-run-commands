# Step 1: Install and Configure Docker
# Update and upgrade system packages
sudo apt-get update
sudo apt-get upgrade

# Install Docker dependencies and add the Docker repository
sudo apt-get install apt-transport-https ca-certificates curl gnupg2 software-properties-common
curl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add -
sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/debian $(lsb_release -cs) stable"

# Install Docker
sudo apt-get update
sudo apt-get install docker-ce docker-ce-cli containerd.io

# Enable Docker to start on system boot
sudo systemctl enable docker

# Test Docker installation
sudo docker run hello-world

# Step 2: Build a Docker Image
# Navigate to the project directory
cd geminicode-langchain-flask-codeupdate-cloudrun

# Activate the virtual environment if needed
source venv/bin/activate

# Build the Docker image with the specified tag
docker build -t my-flask-app .

# Step 3: Push the Docker Image to Google Cloud Registry
# Authenticate with Google Cloud and configure Docker for Google Cloud Registry
gcloud auth login
gcloud auth configure-docker

# Tag the Docker image for Google Cloud Registry
docker tag my-flask-app gcr.io/ecstatic-fiber-408106/my-flask-app:v1

# Push the Docker image to Google Cloud Registry
docker push gcr.io/ecstatic-fiber-408106/my-flask-app:v1

# Step 4: Deploy the App to Google Cloud Run
# Deploy the app to Cloud Run with the specified settings
gcloud run deploy my-flask-service --image gcr.io/ecstatic-fiber-408106/my-flask-app:v1 --platform managed --region us-central1 --allow-unauthenticated
